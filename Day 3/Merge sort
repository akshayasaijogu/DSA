class Solution {

 void merge(int arr[],int l,int mid, int r){
    int n1=mid-l+1; 
    int n2=r-mid;
     int la[] = new int[n1];
     int ra[] = new int[n2];
      for (int i = 0; i < n1; i++){
            la[i] = arr[l + i];
    }
        for (int j = 0; j < n2; j++){
            ra[j] = arr[mid + 1 + j];
    }           
    int i=0; 
    int j=0;
    int k=l;
    while(i<n1 && j<n2){
        if(la[i]<=ra[j]){
            arr[k] = la[i];
            i++;
        }else{
            arr[k]=ra[j];
            j++;
        }
        k++;
    }
    while (i < n1) {
            arr[k] = la[i];
            i++;
            k++;
        }
        while (j < n2) {
           arr[k] = ra[j];
            j++;
            k++;
        }
}
    void mergeSort(int arr[], int l, int r) {
        // code here
        if(l<r){
        int mid = (l+(r-l)/2);
        mergeSort(arr, l, mid);
        mergeSort(arr, mid+1, r);
        merge(arr,l,mid,r);
        }
    }
    
}
